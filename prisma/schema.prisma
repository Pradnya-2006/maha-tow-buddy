// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String
  phone     String?
  role      Role     @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  vehicles  Vehicle[]
  services  TowService[]
}

model Vehicle {
  id           String   @id @default(uuid())
  make         String
  model        String
  year         Int
  licensePlate String   @unique
  ownerId      String
  owner        User     @relation(fields: [ownerId], references: [id])
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  services     TowService[]
}

model TowService {
  id          String    @id @default(uuid())
  status      Status    @default(PENDING)
  vehicleId   String
  vehicle     Vehicle   @relation(fields: [vehicleId], references: [id])
  userId      String
  user        User      @relation(fields: [userId], references: [id])
  pickupLoc   String
  dropoffLoc  String
  description String?
  price       Float?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  completedAt DateTime?
}

enum Role {
  USER
  ADMIN
  DRIVER
}

enum Status {
  PENDING
  ACCEPTED
  IN_PROGRESS
  COMPLETED
  CANCELLED
}
